OD<- read.csv("OD2015_Alljobs.csv")
setwd("C:\Users/LXB19/Documents/GEOG458/Lab2")
setwd("C:/Users/LXB19/Documents/GEOG458/Lab2")
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
View(kcTract)
View(OD)
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
View(kc_LQ)
## read the od csv, and clean up formatting issues
t = read.csv("wa_od_main_JT00_2015.csv")
## read the od csv, and clean up formatting issues
t = read.csv("wa_od_main_JT00_2015.csv")
## read the od csv, and clean up formatting issues
t = read.csv("wa_od_main_JT00_2015.csv")
t$w_geocode<-as.character(t$w_geocode)
t$h_geocode<-as.character(t$h_geocode)
t$w_geocode[which(length(t$w_geocode) == 14)]<-paste0("0",t$w_geocode[which(length(t$w_geocode) == 14)])
t$h_geocode[which(length(t$h_geocode) == 14)]<-paste0("0",t$h_geocode[which(length(t$h_geocode) == 14)])
##Making Columns for worktract and hometract
t$wt<-substr(t$w_geocode,1,11)
t$ht<-substr(t$h_geocode,1,11)
##Aggregating each work type
type_S000 = aggregate(. ~ wt + ht,data=t[,c(3,14,15)],FUN=sum)
type_SA01 = aggregate(. ~ wt + ht,data=t[,c(4,14,15)],FUN=sum)
type_SA02 = aggregate(. ~ wt + ht,data=t[,c(5,14,15)],FUN=sum)
type_SA03= aggregate(. ~ wt + ht,data=t[,c(6,14,15)],FUN=sum)
type_SE01 = aggregate(. ~ wt + ht,data=t[,c(7,14,15)],FUN=sum)
type_SE02 = aggregate(. ~ wt + ht,data=t[,c(8,14,15)],FUN=sum)
type_SE03 = aggregate(. ~ wt + ht,data=t[,c(9,14,15)],FUN=sum)
type_SI01 = aggregate(. ~ wt + ht,data=t[,c(10,14,15)],FUN=sum)
type_SI02 = aggregate(. ~ wt + ht,data=t[,c(11,14,15)],FUN=sum)
type_SI03 = aggregate(. ~ wt + ht,data=t[,c(12,14,15)],FUN=sum)
##using a df to store the aggregated work type
pre_OD_worktype_tract <- data.frame(type_S000, type_SA01, type_SA02, type_SA03, type_SE01, type_SE02, type_SE03, type_SI01, type_SI02, type_SI03)
##clean up duplicated wt and ht
OD_worktype_tract <- pre_OD_worktype_tract %>%
select(-contains("t."))
library(dplyr)
OD_worktype_tract <- pre_OD_worktype_tract %>%
select(-contains("t."))
##Importing King Country tract list
kc <- read.csv("kcTract10.csv")
##change GEOID to wt for the joining/merging process
names(kc)[5] <- ("wt")
##Merging to cut dataset down to just KC tracts
kc_OD=merge(kc,OD_worktype_tract,by="wt")
##clean formatting issues
kc_OD$wt<- as.character(kc_OD$wt)
kc_OD$wt[which(length(kc_OD$wt) == 14)]<-paste0("0",kc_OD$wt[which(length(kc_OD$wt) == 14)])
##output csv
write.csv(kc_OD, "OD2015_Alljobs.csv")
View(kc_OD)
OD<- read.csv("OD2015_Alljobs.csv")
View(OD)
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
View(OD)
View(kc_LQ)
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
colours <- brewer.pal(10, "Blues")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks,
all.inside=TRUE)], axes=F)
title(paste ("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 6000, plot.grid=F)
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks,
all.inside=TRUE)], axes=F)
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 6000, plot.grid=F)
title(paste ("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
?SpatialPolygonsRescale
SpatialPolygonsRescale(layout.north.arrow(1), scale = 6000, plot.grid=F)
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
box()
legend(x=475480, y=1219836, legend=leglabs(brks), fill=colours, bty="n")
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks,
all.inside=TRUE)], axes=F)
box()
kc_LQ_plot<- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
kc_LQ_plot<- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) +SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) +SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
+legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) +SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) +SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F) +title(paste ("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) +legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
SpatialPolygonsRescale(kc_LQ_plot, layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
title(paste ("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total"))
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 6000, plot.grid=F)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
##Part 3
###Step6
```{r echo=FALSE, warning=FALSE, message=FALSE, fig.width=12, fig.height=8}
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(475480,1219836), scale = 6000, plot.grid=F)
legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F) +
legend(x=475480, y=164800, legend=leglabs(brks), fill=colours, bty="n")
legend(x=503800, y=164800, legend=leglabs(kc_LQ$kc_LQ), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)+ legend(x=503800, y=164800, legend=leglabs(kc_LQ$kc_LQ), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
legend(x = 505100, y = NULL, legend=kc_LQ$kc_LQ,
col=blue, lty=1:2, cex=0.8)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F) + legend(x = 505100, y = NULL, legend=kc_LQ$kc_LQ,
col=blue, lty=1:2, cex=0.8)
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F) + legend(x = 505100, y = NULL, legend=kc_LQ$kc_LQ,
col="blue", lty=1:2, cex=0.8)
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F) legend(x = 505100, y = NULL, legend=kc_LQ$kc_LQ,
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(rgdal)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
legend(x = 505100, y = NULL, legend=kc_LQ$kc_LQ,
col="blue", lty=1:2, cex=0.8)
makePlot()
box()
?makeplot
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
box()
legend("topright", y = NULL, legend=kc_LQ$kc_LQ,
col="blue", lty=1:2, cex=0.8)
r <- raster(kc_LQ$kc_LQ)
library(raster)
r <- raster(kc_LQ$kc_LQ)
r <- raster(1:5)
r <- raster(c(1,2,3,4,5))
r <- raster(ncols = 1, nrow=191872))
r <- raster(ncols = 1, nrow=191872)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
box()
legend("topright", y = NULL, legend=r,
col="blue", lty=1:2, cex=0.8)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
box()
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(raster)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
r <- raster(ncols = 1, nrow=191872)
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F) + title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs")) + SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
box()
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
addlegend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
addlegend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste0("LQ of King County's Number of jobs of workers age 29 or younger vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(raster)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
r <- raster(ncols = 1, nrow=191872)
kc_LQ <- data.frame(OD$wt, OD$ht, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste0("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 20000, plot.grid=F)
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste0("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 1000, plot.grid=F)
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
library(tmap)
tm_shapes(kcTract)
tm_shape(s.sf) + tm_polygons(col="grey", border.col="white")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste0("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 1000, plot.grid=F)
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste0("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
##SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 1000, plot.grid=F)
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
SpatialPolygonsRescale(layout.north.arrow(1), offset= c(505100,164800), scale = 300, plot.grid=F)
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
?tm_legend
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
tm_legend(outside = TRUE)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
tm_legend(data=kc_LQ$kc_LQ)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")  + tm_legend(data=kc_LQ$kc_LQ)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))+
legend(x=503800, y=164800, legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", "lty", "lwd", "pch")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", lty, lwd, pch)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", lty, lwd)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black")
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent ")
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000) * 100)
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent ")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29")
paste("SA01 is number of workers less than 29yrs, and S000 is the total number of workers")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29") + paste("SA01 is number of workers less than 29yrs, and S000 is the total number of workers")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
r <- raster(ncols = 1, nrow=191872)
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then “zoom in” to look at the location quotients for the subset of tracts selected from your OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29")
