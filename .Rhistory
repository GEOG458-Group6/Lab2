arrange(desc(S000))
head(gga)
od_subset <- od %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
nrows(od)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
nrow(od)
agg <- aggregate(S000 ~ wt, od, sum)
gga <- agg %>%
arrange(desc(S000))
head(gga)
od_subset <- od %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
nrow(od)
agg <- aggregate(S000 ~ wt, od, sum)
gga <- agg %>%
arrange(desc(S000))
head(gga)
od_subset <- od %>%
select(wt,ht) %>%
filter(wt == gga[6,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od, sum)
gga <- agg %>%
arrange(desc(S000))
head(gga)
od_subset <- od %>%
select(wt,ht) %>%
filter(wt == gga[6,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od, sum)
gga <- agg %>%
arrange(desc(S000))
head(gga)
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[6,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(desc(S000))
head(gga)
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[6,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(desc(S000))
head(gga)
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(desc(S000))
head(agg)
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(desc(S000))
agg
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(asc(S000))
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
sort(decreasing = TRUE)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
sort(decreasing = TRUE, na.last=NA)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(ht)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the most jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
test <- unique(od_subset)
test
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the least jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset <- od_subset[!(od_subset$wt == od_subset$ht)]
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the least jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset <- od_subset[!(od_subset$wt == od_subset$ht)]
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the least jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
od_subset <- od_subset[!(od_subset$wt == od_subset$ht)]
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the least jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
od_subset <- od_subset[!(od_subset$wt == od_subset$ht),]
od_subset
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#5ab4ac",nrow(map_data))
map_data <- add_row(map_data, color="#d8b365", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(raster)
library(maptools)
library(RColorBrewer)
library(tmap)
kc_tract <- readShapeSpatial('kc_shp/king10ct.shp')
kc_tract <- merge(kc_tract, map_data, by = "GEOID10")
qtm(kc_tract, fill="color")
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the least jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
library(ggplot2)
library(tidyverse)
detach("package:raster", unload = TRUE)
## Loading data
WAC <- read.csv("wac2015_Alljobs.csv")
## Arranging industry data in a format useful to graphing
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
library(tidyverse)
library(plyr)
library(reshape2)
options(scipen = 999) #turn off scientific notation for tract no.
## Find census tract with the least jobs
od <- read.csv("OD2015_Alljobs.csv")
od_filtered <- od %>%
filter(startsWith(as.character(ht),"53033"))
agg <- aggregate(S000 ~ wt, od_filtered, sum)
gga <- agg %>%
arrange(S000)
gga
od_subset <- od_filtered %>%
select(wt,ht) %>%
filter(wt == gga[1,1]) %>%
arrange(ht)
od_subset
od_subset <- od_subset[!(od_subset$wt == od_subset$ht),]
od_subset
map_data <- od_subset %>%
select(ht)
colnames(map_data)[colnames(map_data)=="ht"] <- "GEOID10"
map_data$color <- rep("#0000ff",nrow(map_data))
map_data <- add_row(map_data, color="#ff0000", GEOID10=od_subset[1,1], .before=TRUE)
map_data <- unique(map_data)
library(raster)
library(maptools)
library(RColorBrewer)
library(tmap)
kc_tract <- readShapeSpatial('kc_shp/king10ct.shp')
kc_tract <- merge(kc_tract, map_data, by = "GEOID10")
qtm(kc_tract, fill="color")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv('kcTrack10.csv', row.names=1)
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv('C:/sers/LXB19/Documents/GEOG458/Lab2/kc_shpkcTrack10.csv', row.names=1)
setwd("C:/sers/LXB19/Documents/GEOG458/Lab2/")
setwd("~/GEOG458/Lab2")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv('kc_shpkcTrack10.csv', row.names=1)
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv('kcTrack10.csv', row.names=1)
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTrack10.csv", row.names=1)
kC= read.csv(kcTrack10.csv)
kC = read.csv("kcTrack10.csv")
setwd("C:/Users/LXB19/Documents/GEOG458/Lab2")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTrack10.csv")
setwd("C:/Users/LXB19/Documents/GEOG458/Lab2/")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTrack10.csv")
kC = read.csv("~/GEOG458/Lab2/kcTrack10.csv")
list.files()
kC = read.csv("kcTract10.csv")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTract10.csv")
kCy <- as.tibble(kC)
names(kCy) <- c("StateFIPS","CountyFIPS","CensusTract","GEOID","FullName"," LegalStatDescript","TIGER_block", "FunctionalStat", "LandArea", "WaterArea", "lat","lon")
wac_a <- read.csv('wac2015_Alljobs.csv', row.names=1)
wac_al <- as.tibble(wac_a)
library(dplyr)
kc_join <- inner_join(kCy,wac_al, by = "GEOID")
kC = read.csv("kcTract10.csv",row.names=1)
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTract10.csv",row.names=1)
kCy <- as.tibble(kC)
names(kCy) <- c("StateFIPS","CountyFIPS","CensusTract","GEOID","FullName"," LegalStatDescript","TIGER_block", "FunctionalStat", "LandArea", "WaterArea", "lat","lon")
wac_a <- read.csv('wac2015_Alljobs.csv', row.names=1)
wac_al <- as.tibble(wac_a)
library(dplyr)
kc_join <- inner_join(kCy,wac_al, by = "GEOID")
library(rgdal)
kcTract<- readOGR('king10ct/king10ct.shp')
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTract10.csv",row.names=1)
kCy <- as.tibble(kC)
names(kCy) <- c("StateFIPS","CountyFIPS","CensusTract","GEOID","FullName"," LegalStatDescript","TIGER_block", "FunctionalStat", "LandArea", "WaterArea", "lat","lon")
wac_a <- read.csv('wac2015_Alljobs.csv', row.names=1)
wac_al <- as.tibble(wac_a)
library(dplyr)
kc_join <- inner_join(kCy,wac_al, by = "GEOID")
library(rgdal)
kcTract<- readOGR('kc_shp/king10ct.shp')
kcTract.df <- as(kcTract, "data.frame")
library(tmap)
kcTract <- merge(kcTract, kc_join, by.x = "GEOID10", by.y = "GEOID")
summary(kcTract)
tm_shape(kcTract) +
tm_fill("C000", style="fixed", breaks=c(0,2368,6925,14266,27418,67459 ),labels=c("71-2368","2369-6925","6926-14266","14267-27418","27419-67459" ),palette="Reds", title = "Jobs in King County",showNA = FALSE,colorNA = NULL)  +
tm_borders("grey") +
tm_legend(outside = TRUE, text.size = .8) +
tm_layout(frame = FALSE)
