<<<<<<< HEAD
}
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Location Quotient for Workers(29yrs and below)")
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = cat("Location Quotient /n for Workers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = cat("Location Quotient /n for Workers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
cat("Location Quotient /n for Workers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
("Location Quotient for Workers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
("Location Quotient for/nWorkers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
=======
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", lty, lwd)
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black")
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "ht", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of King County's Number of jobs of workers <= 29yrs vs Total Jobs"))
legend("topright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent ")
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000) * 100)
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
>>>>>>> 24c7ca87f02db722961752b5a43dfc57f258ee63
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
("Location Quotient for /n
Workers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
("Location Quotient for
Workers (29yrs and below)"))
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
##Create title and legend
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
("Location Quotient for Workers
who are 29yrs and below"))
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
total <- WAC %>%
select(wt,C000) %>%
rename(njobs = C000)
total$Type <- rep("Total",nrow(total))
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=3,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
##Calculate Location Quotients of OD data.
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('C:/Users/LXB19/Documents/GEOG458/Lab2/kc_shp/king10ct')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
##Creating a function to calculate the location quotient between SA01 and S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
##Creating a dataframe to includ working tract, and location quotient
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
##Change the column names
colnames(kc_LQ) <- c("wt", "kc_LQ")
##Creating breaks to get choropleth map
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
##Make colors
colours <- brewer.pal(10, "Blues")
##Plot variables. Using interveral as the classification method
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
<<<<<<< HEAD
##Create title and legend
title(paste("King County Working Tracts, LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title =
("Location Quotient for Workers
who are 29yrs and below"))
## read the od csv, and clean up formatting issues
t = read.csv("wa_od_main_JT00_2015.csv")
t$w_geocode<-as.character(t$w_geocode)
t$h_geocode<-as.character(t$h_geocode)
t$w_geocode[which(length(t$w_geocode) == 14)]<-paste0("0",t$w_geocode[which(length(t$w_geocode) == 14)])
t$h_geocode[which(length(t$h_geocode) == 14)]<-paste0("0",t$h_geocode[which(length(t$h_geocode) == 14)])
##Making Columns for worktract and hometract
t$wt<-substr(t$w_geocode,1,11)
t$ht<-substr(t$h_geocode,1,11)
##Aggregating each work type
type_S000 = aggregate(. ~ wt + ht,data=t[,c(3,14,15)],FUN=sum)
type_SA01 = aggregate(. ~ wt + ht,data=t[,c(4,14,15)],FUN=sum)
type_SA02 = aggregate(. ~ wt + ht,data=t[,c(5,14,15)],FUN=sum)
type_SA03 = aggregate(. ~ wt + ht,data=t[,c(6,14,15)],FUN=sum)
type_SE01 = aggregate(. ~ wt + ht,data=t[,c(7,14,15)],FUN=sum)
type_SE02 = aggregate(. ~ wt + ht,data=t[,c(8,14,15)],FUN=sum)
type_SE03 = aggregate(. ~ wt + ht,data=t[,c(9,14,15)],FUN=sum)
type_SI01 = aggregate(. ~ wt + ht,data=t[,c(10,14,15)],FUN=sum)
type_SI02 = aggregate(. ~ wt + ht,data=t[,c(11,14,15)],FUN=sum)
type_SI03 = aggregate(. ~ wt + ht,data=t[,c(12,14,15)],FUN=sum)
##using a df to store the aggregated work type
pre_OD_worktype_tract <- data.frame(type_S000, type_SA01, type_SA02, type_SA03, type_SE01, type_SE02, type_SE03, type_SI01, type_SI02, type_SI03)
##clean up duplicated wt and ht
OD_worktype_tract <- pre_OD_worktype_tract %>%
select(-contains("t."))
##Importing King Country tract list
kc <- read.csv("kcTract10.csv")
##change GEOID to wt for the joining/merging process
names(kc)[5] <- ("wt")
##Merging to cut dataset down to just KC tracts
kc_OD=merge(kc,OD_worktype_tract,by="wt")
##clean formatting issues
kc_OD$wt<- as.character(kc_OD$wt)
kc_OD$wt[which(length(kc_OD$wt) == 14)]<-paste0("0",kc_OD$wt[which(length(kc_OD$wt) == 14)])
##output csv
#write.csv(kc_OD, "OD2015_Alljobs.csv")
##Sample of Cleaned OD data
head(kc_OD)
##Sample of Cleaned OD data
print(head(kc_OD))
##Sample of Cleaned OD data
head(kc_OD)
library(dplyr)
library(dplyr)
## read the od csv, and clean up formatting issues
t = read.csv("wa_od_main_JT00_2015.csv")
t$w_geocode<-as.character(t$w_geocode)
t$h_geocode<-as.character(t$h_geocode)
t$w_geocode[which(length(t$w_geocode) == 14)]<-paste0("0",t$w_geocode[which(length(t$w_geocode) == 14)])
t$h_geocode[which(length(t$h_geocode) == 14)]<-paste0("0",t$h_geocode[which(length(t$h_geocode) == 14)])
##Making Columns for worktract and hometract
t$wt<-substr(t$w_geocode,1,11)
t$ht<-substr(t$h_geocode,1,11)
##Aggregating each work type
type_S000 = aggregate(. ~ wt + ht,data=t[,c(3,14,15)],FUN=sum)
type_SA01 = aggregate(. ~ wt + ht,data=t[,c(4,14,15)],FUN=sum)
type_SA02 = aggregate(. ~ wt + ht,data=t[,c(5,14,15)],FUN=sum)
type_SA03 = aggregate(. ~ wt + ht,data=t[,c(6,14,15)],FUN=sum)
type_SE01 = aggregate(. ~ wt + ht,data=t[,c(7,14,15)],FUN=sum)
type_SE02 = aggregate(. ~ wt + ht,data=t[,c(8,14,15)],FUN=sum)
type_SE03 = aggregate(. ~ wt + ht,data=t[,c(9,14,15)],FUN=sum)
type_SI01 = aggregate(. ~ wt + ht,data=t[,c(10,14,15)],FUN=sum)
type_SI02 = aggregate(. ~ wt + ht,data=t[,c(11,14,15)],FUN=sum)
type_SI03 = aggregate(. ~ wt + ht,data=t[,c(12,14,15)],FUN=sum)
##using a df to store the aggregated work type
pre_OD_worktype_tract <- data.frame(type_S000, type_SA01, type_SA02, type_SA03, type_SE01, type_SE02, type_SE03, type_SI01, type_SI02, type_SI03)
##clean up duplicated wt and ht
OD_worktype_tract <- pre_OD_worktype_tract %>%
select(-contains("t."))
##Importing King Country tract list
kc <- read.csv("kcTract10.csv")
##change GEOID to wt for the joining/merging process
names(kc)[5] <- ("wt")
##Merging to cut dataset down to just KC tracts
kc_OD=merge(kc,OD_worktype_tract,by="wt")
##clean formatting issues
kc_OD$wt<- as.character(kc_OD$wt)
kc_OD$wt[which(length(kc_OD$wt) == 14)]<-paste0("0",kc_OD$wt[which(length(kc_OD$wt) == 14)])
##Sample of Cleaned OD data
head(kc_OD)
##output csv
#write.csv(kc_OD, "OD2015_Alljobs.csv")
## FOR WAC CSV
##Setting up table and cleaning up
w = read.csv("wa_wac_S000_JT00_2015.csv")
w$w_geocode<-as.character(w$w_geocode)
w$w_geocode[which(length(w$w_geocode) == 14)]<-paste0("0",w$w_geocode[which(length(w$w_geocode) == 14)])
##Making Columns for worktract and hometract
w$wt<-substr(w$w_geocode,1,11)
##Aggregating
wtuwac=aggregate(. ~ w$wt,data=w[,c(2,11,13,14,16)],FUN=sum)
colnames(wtuwac)[colnames(wtuwac)=="w$wt"] <- "GEOID"
##Merge w/ King County Tract
kc=read.csv("kcTract10.csv")
names(kc)[1]=paste("wt")
kc$GEOID10<-as.character(kc$GEOID10)
colnames(kc)[colnames(kc)=="GEOID10"] <- "GEOID"
wackc=merge(kc,wtuwac,by="GEOID")
head(wackc)
##Adding Combined UMWT (utilities, manufacturing, wholesale trade, and transportation & warehouseing)
wackc["UMWT"]=wackc$CNS03+wackc$CNS05+wackc$CNS06+wackc$CNS08
wackc["UMWTshare"]=wackc$UMWT/wackc$C000
#write.csv(wackc,"wac2015_Alljobs.csv")
## FOR RAC CSV
##Setting up table and cleaning up
r = read.csv("wa_rac_S000_JT00_2015.csv")
r$h_geocode<-as.character(r$h_geocode)
r$h_geocode[which(length(r$h_geocode) == 14)]<-paste0("0",r$h_geocode[which(length(r$h_geocode) == 14)])
##Making Columns for worktract and hometract
r$rt<-substr(r$h_geocode,1,11)
##Aggregating
rturac=aggregate(. ~ r$rt,data=r[,c(2,11,13,14,16)],FUN=sum)
colnames(rturac)[colnames(rturac)=="r$rt"] <- "GEOID"
##Merge w/ King County Tract
names(kc)[1]=paste("rt")
rackc=merge(kc,rturac,by="GEOID")
head(rackc)
##Adding Combined UMWT (utilities, manufacturing, wholesale trade, and transportation & warehouseing)
rackc["UMWT"]=rackc$CNS03+rackc$CNS05+rackc$CNS06+rackc$CNS08
rackc["UMWTshare"]=rackc$UMWT/rackc$C000
#write.csv(rackc,"rac2015_Alljobs.csv")
library(ggplot2)
library(raster)
#plotted all the jobs according to residence block.
alljobs_plot <- ggplot(data=OD_worktype_tract,aes(x=ht, y=S000, color=S000)) +geom_point() +xlab("Residence Block") +ylab("Total Number of Jobs") +ggtitle("Residence-Jobs Relation") +theme_bw()
alljobs_plot
#plotted all the jobs according to workplace block.
ttujobs_plot <- ggplot(data=OD_worktype_tract,aes(x=wt, y=S000, color=S000)) +geom_point() +xlab("Workplace Block") +ylab("Total Number of Jobs") +ggtitle("Workplace-Jobs Relation") +theme_bw()
ttujobs_plot
library(ggplot2)
=======
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29")
install.packages("raster")
install.packages("maptools")
install.packages("RColorBrewer")
install.packages("tmap")
help("readShapeSpatial")
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=rt, y=C000)) + geom_bar() + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
install.packages("tidyverse")
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=rt, y=C000)) + geom_bar() + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
## Done by Jody
library(ggplot2)
library(raster)
alljobs_plot <- ggplot(data=OD_worktype_tract,aes(x=ht, y=S000, color=S000)) +geom_point() +xlab("Residence Block") +ylab("Total Number of Jobs") +ggtitle("Residence-Jobs Relation") +theme_bw()
alljobs_plot
ttujobs_plot <- ggplot(data=OD_worktype_tract,aes(x=wt, y=S000, color=S000)) +geom_point() +xlab("Workplace Block") +ylab("Total Number of Jobs") +ggtitle("Workplace-Jobs Relation") +theme_bw()
ttujobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=rt, y=C000)) + geom_bar() + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=rt, y=C000)) + geom_bar() + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar() + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(aes(fill=C000)) + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(width=1,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
jobs <- select("CNS03","CNS05","CNS06","CNS08")
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
jobs <- select(WAC,"CNS03","CNS05","CNS06","CNS08")
library(ggplot2)
WAC <- read.csv("wac2015_Alljobs.csv")
jobs <- select(WAC,CNS03,CNS05,CNS06,CNS08)
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
jobs <- select(WAC,CNS03,CNS05,CNS06,CNS08)
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
jobs <- select(WAC,CNS03,CNS05,CNS06,CNS08)
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(fill=jobs,width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
CNS03 <- WAC %>%
select(CNS03)
CNS03$Type <- rep("Utilities",nrow(CNS03))
CNS05 <- WAC %>%
select(CNS05)
CNS05$Type <- rep("Utilities",nrow(CNS05))
CNS06 <- WAC %>%
select(CNS06)
CNS06$Type <- rep("Utilities",nrow(CNS06))
CNS08 <- WAC %>%
select(CNS08)
CNS08$Type <- rep("Utilities",nrow(CNS08))
jobs <- rbind(CNS03,CNS05,CNS06,CNS08)
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilites,manufacturing,wholesale,transware)
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- data.frame(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(fill=jobs,width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind.data.frame(utilities,manufacturing,wholesale,transware)
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03) %>%
rename(CNS03=njobs)
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03) %>%
rename(CNS03="njobs")
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=WAC,aes(x=wt, y=C000)) + geom_bar(fill=jobs,width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=C000)) + geom_bar(fill=jobs,width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, color=Type)) + geom_bar(width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=2,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=5,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
total <- WAC %>%
select(wt,C000) %>%
rename(njobs = C000)
total$Type <- rep("Total",nrow(total))
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(total,utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=5,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
total <- WAC %>%
select(wt,C000) %>%
rename(njobs = C000)
total$Type <- rep("Total",nrow(total))
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=5,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
library(ggplot2)
>>>>>>> 24c7ca87f02db722961752b5a43dfc57f258ee63
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
total <- WAC %>%
select(wt,C000) %>%
rename(njobs = C000)
total$Type <- rep("Total",nrow(total))
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=3,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
<<<<<<< HEAD
library(tidyverse)
library(reshape2)
kC = read.csv('/Users/Wenjin/RStudio/kcTrack10.csv', row.names=1)
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTrack10.csv")
kC = read.csv("kcTract10.csv")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTract10.csv")
kCy <- as.tibble(kC)
names(kCy) <- c("StateFIPS","CountyFIPS","CensusTract","GEOID","FullName"," LegalStatDescript","TIGER_block", "FunctionalStat", "LandArea", "WaterArea", "lat","lon")
wac_a <- read.csv('/Users/Wenjin/RStudio/wac2015_Alljobs.csv', row.names=1)
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTract10.csv")
kCy <- as.tibble(kC)
names(kCy) <- c("StateFIPS","CountyFIPS","CensusTract","GEOID","FullName"," LegalStatDescript","TIGER_block", "FunctionalStat", "LandArea", "WaterArea", "lat","lon")
wac_a <- read.csv("wac2015_Alljobs.csv")
wac_al <- as.tibble(wac_a)
kc_join <- inner_join(kCy,wac_al, by = "GEOID")
library(tidyverse)
library(reshape2)
library(ggmap)
kC = read.csv("kcTract10.csv")
kCy <- as.tibble(kC)
names(kCy) <- c("StateFIPS","CountyFIPS","CensusTract","GEOID","FullName"," LegalStatDescript","TIGER_block", "FunctionalStat", "LandArea", "WaterArea", "lat","lon")
wac_a <- read.csv("wac2015_Alljobs.csv")
wac_al <- as.tibble(wac_a)
kc_join <- inner_join(kCy,wac_al, by = "GEOID")
options(scipen = 999) #turn off scientific notation for tract no.
t = read.csv("wa_od_main_JT00_2015.csv")
agg_t <- data.frame(t[,1:3])
library(plyr)
library(reshape2)
agg <- aggregate(S000 ~ h_geocode + w_geocode , agg_t, sum)
gga <- agg %>% arrange(desc(S000)) # desc
head(gga)
=======
library(ggplot2)
library(tidyverse)
WAC <- read.csv("wac2015_Alljobs.csv")
total <- WAC %>%
select(wt,C000) %>%
rename(njobs = C000)
total$Type <- rep("Total",nrow(total))
utilities <- WAC %>%
select(wt,CNS03) %>%
rename(njobs = CNS03)
utilities$Type <- rep("Utilities",nrow(utilities))
manufacturing <- WAC %>%
select(wt,CNS05) %>%
rename(njobs = CNS05)
manufacturing$Type <- rep("Manufacturing",nrow(manufacturing))
wholesale <- WAC %>%
select(wt,CNS06) %>%
rename(njobs = CNS06)
wholesale$Type <- rep("Wholesale Trade",nrow(wholesale))
transware <- WAC %>%
select(wt,CNS08) %>%
rename(njobs = CNS08)
transware$Type <- rep("Transportation and Warehousing",nrow(transware))
jobs <- rbind(utilities,manufacturing,wholesale,transware)
sectorjobs_plot <- ggplot(data=jobs,aes(x=wt, y=njobs, fill=Type)) + geom_bar(width=3,stat="identity") + xlab("Workplace Block") + ylab("Number of Jobs") + ggtitle("Proportions of Jobs in Census Blocks")
sectorjobs_plot
install.packages("ggmap")
##Calculate Location Quotients (Links to an external site.)Links to an external site. for all of your data, and then "zoom in" to look at the location quotients for the subset of tracts selected from your OD data.
library(raster)
library(maptools)
library(RColorBrewer)
library(tmap)
kcTract<- readShapeSpatial('kc_shp/king10ct.shp')
OD<- read.csv("OD2015_Alljobs.csv")
names(kcTract)
##extract the attribute data of instrest, in this case, it is the percentage of "Number of jobs of workers age 29 or younger" and the "Total Number of jobs", SA01/S000
SA01 <- OD$SA01
S000 <- OD$S000
LQ <- function(SA01, S000){
sdp <- SA01/S000
dp <- sum(SA01) / sum(S000)
sdp/dp
}
kc_LQ <- data.frame(OD$wt, LQ(SA01, S000))
colnames(kc_LQ) <- c("wt", "kc_LQ")
brks<-c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
colours <- brewer.pal(10, "Blues")
kc_LQPlot <- plot(kcTract, col=colours[findInterval(kc_LQ$kc_LQ, brks, all.inside=TRUE)], axes=F)
box()
title(paste("LQ of SA01 and S000"))
legend("bottomright", legend=leglabs(brks), fill=colours, bty="n", border = "black", title = "Percent of workers <= 29")
>>>>>>> 24c7ca87f02db722961752b5a43dfc57f258ee63
